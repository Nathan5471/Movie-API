openapi: 3.0.4
info:
  title: Movie API
  version: 1.0.0
  description: API for reviewing and adding facts to movies that supports accounts.

servers:
  - url: https://movieapi.nathanc.me
    description: Production server
  - url: http://localhost:3000
    description: Development server

paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Allows a new user to register an account with a username and password.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  minLength: 6
                confirmPassword:
                  type: string
                  minLength: 6
              required:
                - username
                - password
                - confirmPassword
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth/login:
    post:
      summary: Login a user
      description: Authenticates a user using their username and password.
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  minLength: 6
              required:
                - username
                - password
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  token:
                    type: string
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth/currentUser:
    get:
      summary: Get the current User
      description: Gets the logged in user's information
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        "200":
          description: Current user information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth/editUsername:
    put:
      summary: Edit a user's username
      description: Allows a logged in user to change their username
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newUsername:
                  type: string
                token:
                  type: string
              required:
                - newUsername
                - token
      responses:
        "200":
          description: Username updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth/editPassword:
    put:
      summary: Edit a user's password
      description: Allows a logged in user to change their password
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                currentPassword:
                  type: string
                newPassword:
                  type: string
                  minLength: 6
                confirmNewPassword:
                  type: string
                  minLength: 6
              required:
                - token
                - currentPassword
                - newPassword
                - confirmNewPassword
      responses:
        "200":
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth/deleteAccount:
    delete:
      summary: Delete a user's account
      description: Allows a logged in user to delete their account
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
              required:
                - token
                - password
      responses:
        "200":
          description: Account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /movies/add:
    post:
      summary: Add a movie
      description: Add a movie to the database
      tags:
        - Movies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                releaseYear:
                  type: integer
                tvdbId:
                  type: integer
                token:
                  type: string
              required:
                - title
                - description
                - releaseYear
                - tvdbId
                - token
      responses:
        "201":
          description: Movie added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /movies/all:
    get:
      summary: Get all movies
      description: Gets a list of all of the movies in the database
      tags:
        - Movies
      responses:
        "200":
          description: All of the movies
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                        releaseYear:
                          type: integer
                        tvdbId:
                          type: integer
        "404":
          description: No movies found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /movies/{id}:
    get:
      summary: Get a movie by id
      description: Get a movie from the database by its id
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the movie to retrieve
          schema:
            type: string
      tags:
        - Movies
      responses:
        "200":
          description: The request movies information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  releaseYear:
                    type: integer
                  tvdbId:
                    type: integer
        "404":
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /movies/edit/{id}:
    put:
      summary: Edit a movie by id
      description: Allows the user to edit a movie by its id if they added the movie
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the movie to edit
          schema:
            type: string
      tags:
        - Movies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                releaseYear:
                  type: integer
                tvdbId:
                  type: integer
                token:
                  type: string
              required:
                - token
      responses:
        "200":
          description: The movie was successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  releaseYear:
                    type: integer
                  tvdbId:
                    type: integer
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                porperties:
                  error:
                    type: string
  /movies/delete/{id}:
    delete:
      summary: Delete a movie by id
      description: Allows the user to delete a movie by its id if they added the movie
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the movie to delete
          schema:
            type: string
      tags:
        - Movies
      responses:
        "200":
          description: The move was successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /movies/rate/{id}:
    post:
      summary: Rate a movie
      description: Allows a logged in user to rate a movie
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the movie to rate
          schema:
            type: string
      tags:
        - User Movie Interactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  minimum: 1
                  maximum: 10
                token:
                  type: string
              required:
                - rating
                - token
      responses:
        "201":
          description: The movie was successfully rated
          content:
            application/json:
              schema:
                type: object
                properties:
                  averageRating:
                    type: number
                    format: float
                    minimum: 1
                    maximum: 10
                  totalRatings:
                    type: integer
                    minimum: 0
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            applicatoin/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /movies/getRating/{id}:
    get:
      summary: Get the average rating of a movie
      description: Retrieves the average rating, total ratings, and the user's rating (if they're logged in) of a movie
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the movie to get the rating for
          schema:
            type: string
      tags:
        - User Movie Interactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        "200":
          description: The movie's rating information was retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  averageRating:
                    type: number
                    format: float
                    minimum: 1
                    maximum: 10
                  totalRatings:
                    type: integer
                    minimum: 0
                  userRating:
                    type: integer
                    minimum: 1
                    maximum: 10
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /movies/removeRating/{id}:
    delete:
      summary: Remove a user's rating from a movie
      description: Allows a logged in user to remove their rating from a movie
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the movie to remove the rating from
          schema:
            type: string
      tags:
        - User Movie Interactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        "200":
          description: The rating was successfully removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
